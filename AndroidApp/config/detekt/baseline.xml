<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>LongMethod:AddTaskWorker.kt$AddTaskWorker$@Suppress("SwallowedException", "TooGenericExceptionCaught") override suspend fun doWork(): Result</ID>
    <ID>LongMethod:FocusInboxSoonRequest.kt$FocusInboxSoonRequest$fun get(): NotionBodyRequest</ID>
    <ID>LongMethod:HomeScreen.kt$@Composable fun Entry( content: EntryContent, modifier: Modifier = Modifier, openComposer: (String) -&gt; Unit )</ID>
    <ID>LongMethod:OverviewWidgetReceiver.kt$@Composable fun EntryWidget( content: EntryContent, )</ID>
    <ID>LongMethod:OverviewWidgetReceiver.kt$OverviewWidget$@Composable fun OverviewAppWidgetContent( inbox: List&lt;Inbox&gt;, focus: List&lt;Focus&gt;, soon: List&lt;Soon&gt; )</ID>
    <ID>LongMethod:ReviewScreen.kt$@OptIn(ExperimentalMaterialApi::class) @Composable fun ReviewScreenContent( refreshing: Boolean, goals: List&lt;EntryContent&gt;, areas: List&lt;EntryContent&gt;, bottom: ReviewStateBottom, refresh: () -&gt; Unit, openComposer: (String) -&gt; Unit, bottomSelection: (ReviewBottomType) -&gt; Unit, numberOfColumns: Int )</ID>
    <ID>LongMethod:ReviewScreen.kt$@OptIn(ExperimentalMaterialApi::class) @Composable fun ReviewScreenContentExpanded( refreshing: Boolean, goals: List&lt;EntryContent&gt;, areas: List&lt;EntryContent&gt;, bottom: ReviewStateBottom, refresh: () -&gt; Unit, openComposer: (String) -&gt; Unit, bottomSelection: (ReviewBottomType) -&gt; Unit, )</ID>
    <ID>LongMethod:TaskComposerScreen.kt$@Composable private fun TaskComposerScreenContentDialog( state: ComposerState, onTitleChange: (String) -&gt; Unit = {}, onUrlChange: (String) -&gt; Unit = {}, saveArticle: () -&gt; Unit, saveLifeOs: () -&gt; Unit, onTypeSelected: (String) -&gt; Unit, onStatusSelected: (String) -&gt; Unit, onSelectDate: () -&gt; Unit, onDateSelected: (Long?) -&gt; Unit, onDateSelectionDismiss: () -&gt; Unit )</ID>
    <ID>LongMethod:TaskComposerScreen.kt$@Composable private fun TaskComposerScreenDataContent( state: ComposerState, onTitleChange: (String) -&gt; Unit = {}, onUrlChange: (String) -&gt; Unit = {}, onTypeSelected: (String) -&gt; Unit, onStatusSelected: (String) -&gt; Unit, onSelectDate: () -&gt; Unit, onDateSelected: (Long?) -&gt; Unit, onDateSelectionDismiss: () -&gt; Unit )</ID>
    <ID>LongParameterList:TaskComposerScreen.kt$( state: ComposerState, onTitleChange: (String) -&gt; Unit = {}, onUrlChange: (String) -&gt; Unit = {}, saveArticle: () -&gt; Unit, saveLifeOs: () -&gt; Unit, onTypeSelected: (String) -&gt; Unit, onStatusSelected: (String) -&gt; Unit, onSelectDate: () -&gt; Unit, onDateSelected: (Long?) -&gt; Unit, onDateSelectionDismiss: () -&gt; Unit )</ID>
    <ID>MagicNumber:AppDatabase.kt$&lt;no name provided&gt;$6</ID>
    <ID>MagicNumber:AppDatabase.kt$&lt;no name provided&gt;$7</ID>
    <ID>MagicNumber:AppDatabase.kt$&lt;no name provided&gt;$8</ID>
    <ID>MagicNumber:AppDatabase.kt$&lt;no name provided&gt;$9</ID>
    <ID>MagicNumber:DailyRefreshWorker.kt$DailyRefreshWorker$3</ID>
    <ID>MagicNumber:EntryContent.kt$100</ID>
    <ID>MagicNumber:HomeScreen.kt$0.5f</ID>
    <ID>MagicNumber:RefreshManager.kt$RefreshManager$10L</ID>
    <ID>MagicNumber:ReviewScreen.kt$0.5f</ID>
    <ID>MagicNumber:TaskComposerScreen.kt$0.3f</ID>
    <ID>MagicNumber:TaskComposerScreen.kt$0.5f</ID>
    <ID>MagicNumber:build.gradle.kts$28</ID>
    <ID>MagicNumber:build.gradle.kts$36</ID>
    <ID>MaxLineLength:ReviewScreen.kt$style = if (!selection.selected) MaterialTheme.typography.titleSmall else MaterialTheme.typography.titleSmall</ID>
    <ID>MaximumLineLength:ReviewScreen.kt$ </ID>
    <ID>NestedBlockDepth:TasksRepository.kt$TasksRepository$suspend fun editTask( entryId: String, title: String?, link: String, type: String?, status: String?, due: Long? = null ): ApiResult&lt;Unit&gt;</ID>
    <ID>ReturnCount:TasksRepository.kt$TasksRepository$suspend fun editTask( entryId: String, title: String?, link: String, type: String?, status: String?, due: Long? = null ): ApiResult&lt;Unit&gt;</ID>
    <ID>StringLiteralDuplication:ArticleRepository.kt$ArticleRepository$"Status"</ID>
    <ID>StringLiteralDuplication:FocusInboxSoonRequest.kt$FocusInboxSoonRequest$"Status"</ID>
    <ID>StringLiteralDuplication:HomeScreen.kt$"No date"</ID>
    <ID>StringLiteralDuplication:HomeScreen.kt$"https://www.phoxwater.com/pages/setup"</ID>
    <ID>StringLiteralDuplication:HomeScreen.kt$"soon-${UUID.randomUUID()}"</ID>
    <ID>StringLiteralDuplication:TasksRepository.kt$TasksRepository$"Status"</ID>
    <ID>StringLiteralDuplication:build.gradle.kts$"engBuild"</ID>
    <ID>StringLiteralDuplication:build.gradle.kts$"release"</ID>
    <ID>ThrowingExceptionsWithoutMessageOrCause:GoalsWidgetReceiver.kt$GoalsAppWidget$IllegalStateException()</ID>
    <ID>ThrowingExceptionsWithoutMessageOrCause:OverviewWidgetReceiver.kt$OverviewWidget$IllegalStateException()</ID>
    <ID>TooGenericExceptionCaught:TasksRepository.kt$TasksRepository$dbE: Exception</ID>
    <ID>TooGenericExceptionCaught:TasksRepository.kt$TasksRepository$e: Exception</ID>
  </CurrentIssues>
</SmellBaseline>
